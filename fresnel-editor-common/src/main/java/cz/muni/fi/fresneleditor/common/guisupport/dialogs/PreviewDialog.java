/*
 * Fresnel Editor
 */

package cz.muni.fi.fresneleditor.common.guisupport.dialogs;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

import org.openrdf.model.URI;
import org.openrdf.model.impl.URIImpl;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import cz.muni.fi.fresneleditor.common.utils.GuiUtils;
import fr.inria.jfresnel.Format;
import fr.inria.jfresnel.Lens;
import fr.inria.jfresnel.sesame.SesameFormat;

/**
 * 
 * @author Miroslav Warchil
 * @version 28.6.2009
 */
public class PreviewDialog extends javax.swing.JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private static final Logger LOG = LoggerFactory
			.getLogger(PreviewDialog.class);

	// private final String FILE_URI_PREFIX = "file://";

	protected static final int PREVIEW_INVALID = -1;
	public static final int PREVIEW_FORMAT = 0;
	public static final int PREVIEW_LENS = 1;
	public static final String DEFAULT_LENS_NAME = "fresneleditor:defaultVizLens";

	protected int type = PREVIEW_INVALID;
	protected Lens lens;
	protected Format format;

	/**
	 * Creates new form PreviewDialog.
	 */
	public PreviewDialog(java.awt.Frame parent, boolean modal, int type,
			Lens lens, Format format) {

		super(parent, modal);
		initComponents();
		this.type = type;
		this.lens = lens;
		this.format = format;
		customInitComponents();
	}

	/**
	 * Do additional init actions.
	 */
	private void customInitComponents() {

		final String labelText;
		final List<URI> previewElements = new ArrayList<URI>();

		previewElements.add(new URIImpl(DEFAULT_LENS_NAME));

		switch (type) {
		case PREVIEW_FORMAT:
			labelText = "Select lens which will be used for preview:";
			break;
		case PREVIEW_LENS:
			// No format selection is needed - hide label and combo box
			selectLabel.setVisible(false);
			selectCmbBox.setVisible(false);
			labelText = "Select format which will be used for preview:";
			break;
		default:
			throw new IllegalArgumentException(
					"Invalid type of preview dialog passed to constructor: "
							+ type + "!");
		}

		SwingUtilities.invokeLater(new Runnable() {

			@Override
			public void run() {
				selectLabel.setText(labelText);
				selectCmbBox.setElements(previewElements);
			}
		});
	}

	/**
	 * 
	 * @return
	 */
	public URI getSelectedUri() {
		return (URI) selectCmbBox.getSelectedItem();
	}

	/**
     * 
     */
	public String getStylesheetUri() {
		return stylesheetUriText.getText();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		cancelBtn = new javax.swing.JButton();
		renderBtn = new javax.swing.JButton();
		parametersPanel = new javax.swing.JPanel();
		selectLabel = new javax.swing.JLabel();
		sylesheetUriLabel = new javax.swing.JLabel();
		stylesheetUriText = new javax.swing.JTextField();
		browseLocalCssBtn = new javax.swing.JButton();
		selectCmbBox = new cz.muni.fi.fresneleditor.common.guisupport.ExtendedJComboBox<URI>();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application
				.getInstance(
						cz.muni.fi.fresneleditor.common.FresnelApplication.class)
				.getContext().getResourceMap(PreviewDialog.class);
		setTitle(resourceMap.getString("Form.title")); // NOI18N
		setName("Form"); // NOI18N

		cancelBtn.setText(resourceMap.getString("cancelBtn.text")); // NOI18N
		cancelBtn.setName("cancelBtn"); // NOI18N
		cancelBtn.setPreferredSize(new java.awt.Dimension(109, 23));
		cancelBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelBtnActionPerformed(evt);
			}
		});

		renderBtn.setText(resourceMap.getString("renderBtn.text")); // NOI18N
		renderBtn.setName("renderBtn"); // NOI18N
		renderBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				renderBtnActionPerformed(evt);
			}
		});

		parametersPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder(resourceMap
						.getString("parametersPanel.border.title"))); // NOI18N
		parametersPanel.setName("parametersPanel"); // NOI18N

		selectLabel.setText(resourceMap.getString("selectLabel.text")); // NOI18N
		selectLabel.setName("selectLabel"); // NOI18N

		sylesheetUriLabel.setText(resourceMap
				.getString("sylesheetUriLabel.text")); // NOI18N
		sylesheetUriLabel.setName("sylesheetUriLabel"); // NOI18N

		stylesheetUriText.setName("stylesheetUriText"); // NOI18N

		browseLocalCssBtn.setText(resourceMap
				.getString("browseLocalCssBtn.text")); // NOI18N
		browseLocalCssBtn.setMaximumSize(new java.awt.Dimension(109, 23));
		browseLocalCssBtn.setMinimumSize(new java.awt.Dimension(109, 23));
		browseLocalCssBtn.setName("browseLocalCssBtn"); // NOI18N
		browseLocalCssBtn.setPreferredSize(new java.awt.Dimension(109, 23));
		browseLocalCssBtn
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						browseLocalCssBtnActionPerformed(evt);
					}
				});

		selectCmbBox.setName("selectCmbBox"); // NOI18N

		javax.swing.GroupLayout parametersPanelLayout = new javax.swing.GroupLayout(
				parametersPanel);
		parametersPanel.setLayout(parametersPanelLayout);
		parametersPanelLayout
				.setHorizontalGroup(parametersPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								parametersPanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												parametersPanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																selectLabel)
														.addComponent(
																sylesheetUriLabel)
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																parametersPanelLayout
																		.createSequentialGroup()
																		.addComponent(
																				stylesheetUriText,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				383,
																				Short.MAX_VALUE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																		.addComponent(
																				browseLocalCssBtn,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE))
														.addComponent(
																selectCmbBox,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																382,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap()));
		parametersPanelLayout
				.setVerticalGroup(parametersPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								parametersPanelLayout
										.createSequentialGroup()
										.addComponent(selectLabel)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												selectCmbBox,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(11, 11, 11)
										.addComponent(sylesheetUriLabel)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												parametersPanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																stylesheetUriText,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																22,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																browseLocalCssBtn,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap(12, Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(parametersPanel,
						javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap(292, Short.MAX_VALUE)
								.addComponent(cancelBtn,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(renderBtn,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										109,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addComponent(parametersPanel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														cancelBtn,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(renderBtn))
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));

		pack();
	}// </editor-fold>                        

	private void browseLocalCssBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_browseLocalCssBtnActionPerformed

		JFileChooser chooser = new JFileChooser();

		FileFilter filter = new FileNameExtensionFilter(
				"CSS stylesheets (*.css)", "css");
		chooser.setFileFilter(filter);

		int returnVal = chooser.showOpenDialog(GuiUtils.getTopComponent());
		if (returnVal == JFileChooser.APPROVE_OPTION) {
			try {
				stylesheetUriText.setText(chooser.getSelectedFile()
						.getCanonicalPath());
			} catch (IOException ex) {
				LOG.error("Error when returning from file chooser dialog!");
				return;
				// FIXME
			}
		}
	}// GEN-LAST:event_browseLocalCssBtnActionPerformed

	private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelBtnActionPerformed
		this.dispose();
	}// GEN-LAST:event_cancelBtnActionPerformed

	private void renderBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_renderBtnActionPerformed
		this.dispose();
		renderAction();
	}// GEN-LAST:event_renderBtnActionPerformed

	protected void renderAction() {
		// Hook - concrete dialogs should be subclasses of this one.
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton browseLocalCssBtn;
	private javax.swing.JButton cancelBtn;
	private javax.swing.JPanel parametersPanel;
	private javax.swing.JButton renderBtn;
	private cz.muni.fi.fresneleditor.common.guisupport.ExtendedJComboBox<URI> selectCmbBox;
	private javax.swing.JLabel selectLabel;
	private javax.swing.JTextField stylesheetUriText;
	private javax.swing.JLabel sylesheetUriLabel;

	// End of variables declaration//GEN-END:variables

	public void setSelectLabelText(String selectLabelText) {
		this.selectLabel.setText(selectLabelText);
	}

}
