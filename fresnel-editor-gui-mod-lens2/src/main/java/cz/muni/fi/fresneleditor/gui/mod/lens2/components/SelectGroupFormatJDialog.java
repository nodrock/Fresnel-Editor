/*
 * Fresnel Editor
 */

package cz.muni.fi.fresneleditor.gui.mod.lens2.components;

import java.util.List;

import cz.muni.fi.fresneleditor.common.ContextHolder;
import cz.muni.fi.fresneleditor.common.utils.GuiUtils;
import fr.inria.jfresnel.Format;
import fr.inria.jfresnel.Group;

/**
 * @author Igor Zemsky (zemsky@mail.muni.cz)
 */
public class SelectGroupFormatJDialog extends javax.swing.JDialog {

	private PropertyConfigurationPanel propConfPanel;

	/**
	 * Creates new form SelectGroupFormatJDialog
	 */
	public SelectGroupFormatJDialog(PropertyConfigurationPanel propConfPanel) {

		super(GuiUtils.getOwnerFrame(propConfPanel), true);
		this.propConfPanel = propConfPanel;

		initComponents();
		initFormats();
		initGroups();
		initSelection();

		GuiUtils.centerOnScreen(this);
	}

	/**
	 * init selection based on what is set in the prop configuration panel
	 */
	private void initSelection() {
		Object use = propConfPanel.getFresnelUse();
		if (use == null) {
			formatsList.clearSelection();
			groupsList.clearSelection();
		} else if (use instanceof Format) {

			List<Format> formats = formatsList.getElements();
			for (int i = 0; i < formats.size(); i++) {
				if (formats.get(i).getURI().equals(((Format) use).getURI())) {
					formatsList.setSelectedIndex(i);
				}
			}

		} else if (use instanceof Group) {

			List<Group> groups = groupsList.getElements();
			for (int i = 0; i < groups.size(); i++) {
				if (groups.get(i).getURI().equals(((Group) use).getURI())) {
					groupsList.setSelectedIndex(i);
				}
			}

		} else {
			throw new IllegalArgumentException(
					"Unsuported type of use object: " + use.getClass());
		}
	}

	private void initGroups() {
		List<Group> groups = ContextHolder.getInstance().getFresnelDocumentDao().getGroups();
				
		groupsList.setElements(groups);
	}

	private void initFormats() {
		List<Format> formats = ContextHolder.getInstance().getFresnelDocumentDao().getFormats();
				
		formatsList.setElements(formats);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		closeBtn = new javax.swing.JButton();
		setBtn = new javax.swing.JButton();
		formatsJPanel = new javax.swing.JPanel();
		formatsJScrollPane = new javax.swing.JScrollPane();
		formatsList = new cz.muni.fi.fresneleditor.common.guisupport.components.FormatsJList();
		groupsJPanel = new javax.swing.JPanel();
		groupsJScrollPane = new javax.swing.JScrollPane();
		groupsList = new cz.muni.fi.fresneleditor.common.guisupport.components.GroupsJList();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application
				.getInstance().getContext()
				.getResourceMap(SelectGroupFormatJDialog.class);
		setTitle(resourceMap.getString("Form.title")); // NOI18N
		setName("Form"); // NOI18N

		closeBtn.setText(resourceMap.getString("closeBtn.text")); // NOI18N
		closeBtn.setName("closeBtn"); // NOI18N
		closeBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				closeBtnActionPerformed(evt);
			}
		});

		setBtn.setText(resourceMap.getString("setBtn.text")); // NOI18N
		setBtn.setName("setBtn"); // NOI18N
		setBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				setBtnActionPerformed(evt);
			}
		});

		formatsJPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder(resourceMap
						.getString("formatsJPanel.border.title"))); // NOI18N
		formatsJPanel.setName("formatsJPanel"); // NOI18N

		formatsJScrollPane.setName("formatsJScrollPane"); // NOI18N

		formatsList.setFont(resourceMap.getFont("formatsList.font")); // NOI18N
		formatsList.setName("formatsList"); // NOI18N
		formatsList
				.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
					public void valueChanged(
							javax.swing.event.ListSelectionEvent evt) {
						formatsListValueChanged(evt);
					}
				});
		formatsJScrollPane.setViewportView(formatsList);

		javax.swing.GroupLayout formatsJPanelLayout = new javax.swing.GroupLayout(
				formatsJPanel);
		formatsJPanel.setLayout(formatsJPanelLayout);
		formatsJPanelLayout
				.setHorizontalGroup(formatsJPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								formatsJPanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(
												formatsJScrollPane,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												382, Short.MAX_VALUE)
										.addContainerGap()));
		formatsJPanelLayout
				.setVerticalGroup(formatsJPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								formatsJPanelLayout
										.createSequentialGroup()
										.addComponent(
												formatsJScrollPane,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												124, Short.MAX_VALUE)
										.addContainerGap()));

		groupsJPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder(resourceMap
						.getString("groupsJPanel.border.title"))); // NOI18N
		groupsJPanel.setName("groupsJPanel"); // NOI18N

		groupsJScrollPane.setName("groupsJScrollPane"); // NOI18N

		groupsList.setFont(resourceMap.getFont("groupsList.font")); // NOI18N
		groupsList.setName("groupsList"); // NOI18N
		groupsList
				.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
					public void valueChanged(
							javax.swing.event.ListSelectionEvent evt) {
						groupsListValueChanged(evt);
					}
				});
		groupsJScrollPane.setViewportView(groupsList);

		javax.swing.GroupLayout groupsJPanelLayout = new javax.swing.GroupLayout(
				groupsJPanel);
		groupsJPanel.setLayout(groupsJPanelLayout);
		groupsJPanelLayout
				.setHorizontalGroup(groupsJPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								groupsJPanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(
												groupsJScrollPane,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												382, Short.MAX_VALUE)
										.addContainerGap()));
		groupsJPanelLayout.setVerticalGroup(groupsJPanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						groupsJPanelLayout
								.createSequentialGroup()
								.addComponent(groupsJScrollPane,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addContainerGap()
																.addComponent(
																		groupsJPanel,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE))
												.addGroup(
														layout.createSequentialGroup()
																.addContainerGap()
																.addComponent(
																		formatsJPanel,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE))
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addGap(275,
																		275,
																		275)
																.addComponent(
																		closeBtn,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		74,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		setBtn,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		73,
																		Short.MAX_VALUE)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(formatsJPanel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(groupsJPanel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(setBtn)
												.addComponent(closeBtn))
								.addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_closeBtnActionPerformed
		dispose();
	}// GEN-LAST:event_closeBtnActionPerformed

	private void setBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_setBtnActionPerformed
		Format format = formatsList.getSelectedValueCasted();
		Group group = groupsList.getSelectedValueCasted();
		if (format == null) {
			// either group or nothing is selected
			propConfPanel.setFresnelUse(group);
		} else {
			// format is selected
			propConfPanel.setFresnelUse(format);
		}
		dispose();
	}// GEN-LAST:event_setBtnActionPerformed

	private void formatsListValueChanged(
			javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_formatsListValueChanged
		if (!formatsList.isSelectionEmpty()) {
			groupsList.clearSelection();
		}
	}// GEN-LAST:event_formatsListValueChanged

	private void groupsListValueChanged(javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_groupsListValueChanged
		if (!groupsList.isSelectionEmpty()) {
			formatsList.clearSelection();
		}
	}// GEN-LAST:event_groupsListValueChanged

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton closeBtn;
	private javax.swing.JPanel formatsJPanel;
	private javax.swing.JScrollPane formatsJScrollPane;
	private cz.muni.fi.fresneleditor.common.guisupport.components.FormatsJList formatsList;
	private javax.swing.JPanel groupsJPanel;
	private javax.swing.JScrollPane groupsJScrollPane;
	private cz.muni.fi.fresneleditor.common.guisupport.components.GroupsJList groupsList;
	private javax.swing.JButton setBtn;
	// End of variables declaration//GEN-END:variables

}
