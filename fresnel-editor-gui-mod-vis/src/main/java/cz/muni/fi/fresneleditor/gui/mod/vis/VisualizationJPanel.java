/*
 * Fresnel Editor
 */
package cz.muni.fi.fresneleditor.gui.mod.vis;

import java.awt.Component;
import java.awt.Graphics;
import java.awt.Insets;
import java.io.IOException;
import java.util.Collections;
import java.util.List;
import java.util.ResourceBundle;

import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JScrollPane;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

import org.openrdf.model.URI;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.util.StringUtils;

import cz.muni.fi.fresneleditor.common.ContextHolder;
import cz.muni.fi.fresneleditor.common.FresnelApplication;
import cz.muni.fi.fresneleditor.common.ITabComponent;
import cz.muni.fi.fresneleditor.common.guisupport.ExtendedJList;
import cz.muni.fi.fresneleditor.common.guisupport.IContextMenu;
import cz.muni.fi.fresneleditor.common.guisupport.MessageDialog;
import cz.muni.fi.fresneleditor.common.utils.GuiUtils;
import cz.muni.fi.fresneleditor.common.visualization.IRDFVisualizer;
import cz.muni.fi.fresneleditor.common.visualization.RDFVisualizer;
import cz.muni.fi.fresneleditor.common.visualization.VisualizationParameter;
import cz.muni.fi.fresneleditor.gui.mod.vis.treemodel.VisualizationItemNode;
import cz.muni.fi.fresneleditor.model.DataRepositoryDao;
import fr.inria.jfresnel.Group;
import fr.inria.jfresnel.Lens;
import java.util.ArrayList;
import java.util.Collection;
import org.openrdf.model.impl.URIImpl;

/**
 * 
 * @author Miroslav Warchil
 * changes made in May 2012 by Milos Kalab
 */
public class VisualizationJPanel extends javax.swing.JPanel implements
        ITabComponent<String> {

    private static final Logger LOG = LoggerFactory.getLogger(VisualizationJPanel.class);
    protected static final ResourceBundle bundle = java.util.ResourceBundle.getBundle("cz/muni/fi/fresneleditor/gui/mod/vis/resources/VisualizationJPanel");
    // private static int NO_ROW_SELECTED = -1;
    private VisualizationJScrollPane representingScrollPane = null;
    protected VisualizationItemNode visualizationItemNode = null;
    // private VisualizationRootNode visualizationRootNode = null;
    protected IRDFVisualizer visualizer;
    protected String label;
    protected String defaultCssStylesheet;

    /**
     *
     */
	private class VisualizationJScrollPane extends JScrollPane implements
			IContextMenu {

		public VisualizationJScrollPane(VisualizationJPanel visualizationJPanel) {
			super(visualizationJPanel);
		}

		@Override
		public List<JMenuItem> getMenu() {
			return visualizationItemNode != null ? visualizationItemNode
					.getMenu() : Collections.<JMenuItem> emptyList();
		}
	}

	/**
	 * Creates new form VisualizationJPanel
	 * 
	 * @param visualizer
	 *            instance of visualizer used for visualization of RDF data
	 */
	public VisualizationJPanel(IRDFVisualizer visualizer, String label) {
		this.visualizer = visualizer;
		this.label = label;
		initComponents();
		customInitComponents();
	}

	/** Creates new form VisualizationJPanel */
	public VisualizationJPanel() {
		this(new RDFVisualizer(), "Default Visualization");
	}

	private void customInitComponents() {
            List<Group> groups = ContextHolder.getInstance().getFresnelDocumentDao().getGroups();
		List<URI> availGroups = new ArrayList<URI>();
                for(Group g : groups){
                    availGroups.add(new URIImpl(g.getURI()));
                }
		((ExtendedJList<URI>) groupsList).addElements(availGroups);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		groupSelectionPanel = new javax.swing.JPanel();
		groupsListScrollPane = new javax.swing.JScrollPane();
		groupsList = new cz.muni.fi.fresneleditor.common.guisupport.components.UrisJList();
		groupSelectionLabel = new javax.swing.JLabel();
		visualizeBtn = new javax.swing.JButton();
		cssJPanel = new javax.swing.JPanel();
		stylesheetUriText = new javax.swing.JTextField();
		sylesheetUriLabel = new javax.swing.JLabel();
		browseLocalCssBtn = new javax.swing.JButton();
		stylesheetDescLbl = new javax.swing.JLabel();
		outputFileJPanel = new javax.swing.JPanel();
		outputFileText = new javax.swing.JTextField();
		outputFileLbl = new javax.swing.JLabel();
		browseFileBtn = new javax.swing.JButton();
		outputFileDescLbl = new javax.swing.JLabel();
		jLabel1 = new javax.swing.JLabel();

		java.util.ResourceBundle bundle = java.util.ResourceBundle
				.getBundle("cz/muni/fi/fresneleditor/gui/mod/vis/resources/VisualizationJPanel"); // NOI18N
		groupSelectionPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder(bundle.getString("Select_group")));
		groupSelectionPanel.setName("groupSelectionPanel"); // NOI18N

		groupsListScrollPane.setName("groupsListScrollPane"); // NOI18N

		groupsList.setName("groupsList"); // NOI18N
		groupsListScrollPane.setViewportView(groupsList);

		groupSelectionLabel
				.setText(bundle
						.getString("Select_group_which_will_be_used_for_visualisation_of_RDF_data:")); // NOI18N
		groupSelectionLabel.setName("groupSelectionLabel"); // NOI18N

		javax.swing.GroupLayout gl_groupSelectionPanel = new javax.swing.GroupLayout(
				groupSelectionPanel);
		groupSelectionPanel.setLayout(gl_groupSelectionPanel);
		gl_groupSelectionPanel
				.setHorizontalGroup(gl_groupSelectionPanel
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								gl_groupSelectionPanel
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												gl_groupSelectionPanel
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																groupSelectionLabel)
														.addComponent(
																groupsListScrollPane,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																310,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap(273, Short.MAX_VALUE)));
		gl_groupSelectionPanel
				.setVerticalGroup(gl_groupSelectionPanel
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								gl_groupSelectionPanel
										.createSequentialGroup()
										.addComponent(groupSelectionLabel)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.addComponent(
												groupsListScrollPane,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(52, 52, 52)));

		visualizeBtn.setText(bundle.getString("Visualize_RDF_data")); // NOI18N
		visualizeBtn.setName("visualizeBtn"); // NOI18N
		visualizeBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				visualizeBtnActionPerformed(evt);
			}
		});

		cssJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle
				.getString("CSS_reference")));
		cssJPanel.setName("cssJPanel"); // NOI18N

		stylesheetUriText.setName("stylesheetUriText"); // NOI18N

		sylesheetUriLabel.setText(bundle
				.getString("CSS_stylesheet_location_(URL):")); // NOI18N
		sylesheetUriLabel.setName("sylesheetUriLabel"); // NOI18N

		browseLocalCssBtn.setText(bundle.getString("Browse_local...")); // NOI18N
		browseLocalCssBtn.setName("browseLocalCssBtn"); // NOI18N
		browseLocalCssBtn
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						browseLocalCssBtnActionPerformed(evt);
					}
				});

		stylesheetDescLbl.setFont(new java.awt.Font("Tahoma", 2, 11));
		stylesheetDescLbl.setForeground(new java.awt.Color(51, 51, 51));
		stylesheetDescLbl
				.setText(bundle
						.getString("If_no_CSS_stylesheet_is_specified_then_default_one_is_used.")); // NOI18N
		stylesheetDescLbl.setName("stylesheetDescLbl"); // NOI18N

		javax.swing.GroupLayout gl_cssJPanel = new javax.swing.GroupLayout(
				cssJPanel);
		cssJPanel.setLayout(gl_cssJPanel);
		gl_cssJPanel
				.setHorizontalGroup(gl_cssJPanel
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								gl_cssJPanel
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												gl_cssJPanel
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																gl_cssJPanel
																		.createSequentialGroup()
																		.addComponent(
																				stylesheetUriText,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				464,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				browseLocalCssBtn,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				103,
																				Short.MAX_VALUE))
														.addComponent(
																sylesheetUriLabel)
														.addComponent(
																stylesheetDescLbl))
										.addContainerGap()));
		gl_cssJPanel
				.setVerticalGroup(gl_cssJPanel
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								gl_cssJPanel
										.createSequentialGroup()
										.addGap(7, 7, 7)
										.addComponent(sylesheetUriLabel)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												gl_cssJPanel
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																stylesheetUriText,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																22,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																browseLocalCssBtn))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(stylesheetDescLbl)
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		outputFileJPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder(bundle.getString("Output_file")));
		outputFileJPanel.setName("outputFileJPanel"); // NOI18N

		outputFileText.setName("outputFileText"); // NOI18N

		outputFileLbl.setText(bundle.getString("Path_to_output_file")); // NOI18N
		outputFileLbl.setName("outputFileLbl"); // NOI18N

		browseFileBtn.setText(bundle.getString("Browse")); // NOI18N
		browseFileBtn.setName("browseFileBtn"); // NOI18N
		browseFileBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				browseFileBtnActionPerformed(evt);
			}
		});

		outputFileDescLbl.setFont(new java.awt.Font("Tahoma", 2, 11));
		outputFileDescLbl.setForeground(new java.awt.Color(51, 51, 51));
		outputFileDescLbl.setText(bundle.getString("Output_file_description")); // NOI18N
		outputFileDescLbl.setName("outputFileDescLbl"); // NOI18N

		javax.swing.GroupLayout gl_outputFileJPanel = new javax.swing.GroupLayout(
				outputFileJPanel);
		outputFileJPanel.setLayout(gl_outputFileJPanel);
		gl_outputFileJPanel
				.setHorizontalGroup(gl_outputFileJPanel
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								gl_outputFileJPanel
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												gl_outputFileJPanel
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																gl_outputFileJPanel
																		.createSequentialGroup()
																		.addComponent(
																				outputFileText,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				462,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				browseFileBtn,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				102,
																				javax.swing.GroupLayout.PREFERRED_SIZE))
														.addComponent(
																outputFileLbl)
														.addComponent(
																outputFileDescLbl))
										.addContainerGap(13, Short.MAX_VALUE)));
		gl_outputFileJPanel
				.setVerticalGroup(gl_outputFileJPanel
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								gl_outputFileJPanel
										.createSequentialGroup()
										.addGap(7, 7, 7)
										.addComponent(outputFileLbl)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												gl_outputFileJPanel
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																outputFileText,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																22,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																browseFileBtn))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(outputFileDescLbl)
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
		jLabel1.setText(this.label);
		jLabel1.setName("jLabel1"); // NOI18N

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(visualizeBtn)
												.addGroup(
														layout.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																false)
																.addComponent(
																		outputFileJPanel,
																		javax.swing.GroupLayout.Alignment.LEADING,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addComponent(
																		cssJPanel,
																		javax.swing.GroupLayout.Alignment.LEADING,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addComponent(
																		groupSelectionPanel,
																		javax.swing.GroupLayout.Alignment.LEADING,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE))
												.addComponent(jLabel1))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jLabel1)
				                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(groupSelectionPanel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										190,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(cssJPanel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(outputFileJPanel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(visualizeBtn)
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));
	}// </editor-fold>//GEN-END:initComponents

	private void visualizeBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_visualizeBtnActionPerformed
		final DataRepositoryDao dataDao = ContextHolder.getInstance()
				.getDataRepositoryDao();
		final URI groupUri = groupsList.getSelectedValueCasted();
		// Validate that some group was selected
		if (groupUri == null) {
			new MessageDialog(this, bundle.getString("No_group_selected"),
					bundle.getString("Please_select_group")).setVisible(true);
			return;
		}
		// Validate that group contains at least one lens
		
		Collection<Lens> lenses = ContextHolder.getInstance().getFresnelDocumentDao().getGroup(groupUri.toString()).getLenses();
		if (lenses == null || lenses.isEmpty()) {
			new MessageDialog(this, bundle.getString("Group_without_lens"),
					bundle.getString("No_lens_text")).setVisible(true);
			return;
		}
		// Create parameter for visualization
		final VisualizationParameter visParam = new VisualizationParameter();
		if (StringUtils.hasText(stylesheetUriText.getText())) {
			visParam.setCssStylesheetURL(stylesheetUriText.getText());
		} else if (defaultCssStylesheet != null) {
			visParam.setCssStylesheetURL(defaultCssStylesheet);
		}

		// Trigger visualization
		// if (groupUri != null) {
		if (visualizer == null) {
			visualizer = new RDFVisualizer();
		}
		// if (outputFileText.getText() == null
		// || "".equals(outputFileText.getText())) {
		// visualizer.visualize(dataDao.getRepository(), groupUri,
		// visParam, null);
		// } else {
		// visualizer.visualize(dataDao.getRepository(), groupUri,
		// visParam, outputFileText.getText());
		// }
		SwingWorker worker = new SwingWorker() {
			@Override
			public Object doInBackground() {
				if (outputFileText.getText() == null
						|| "".equals(outputFileText.getText())) {
					visualizer.visualize(dataDao.getRepository(), groupUri,
							visParam, null);
				} else {
					visualizer.visualize(dataDao.getRepository(), groupUri,
							visParam, outputFileText.getText());
				}
				return null;
			}
		};
		worker.execute();

		FresnelApplication.getApp().getBaseFrame().showPreviewPanelFullSize();
	}// GEN-LAST:event_visualizeBtnActionPerformed

	private void browseLocalCssBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_browseLocalCssBtnActionPerformed

		JFileChooser chooser = new JFileChooser();

		FileFilter filter = new FileNameExtensionFilter(
				bundle.getString("CSS_stylesheets_(*.css)"), "css");
		chooser.setFileFilter(filter);

		int returnVal = chooser.showOpenDialog(GuiUtils.getTopComponent());
		if (returnVal == JFileChooser.APPROVE_OPTION) {
			try {
				stylesheetUriText.setText(chooser.getSelectedFile()
						.getCanonicalPath());
			} catch (IOException ex) {
				LOG.error(bundle
						.getString("Error_when_returning_from_file_chooser_dialog!"));
				return;
				// FIXME
			}
		}
	}// GEN-LAST:event_browseLocalCssBtnActionPerformed

	private void browseFileBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_browseFileBtnActionPerformed

		JFileChooser chooser = new JFileChooser();

		int returnVal = chooser.showOpenDialog(GuiUtils.getTopComponent());
		if (returnVal == JFileChooser.APPROVE_OPTION) {
			try {
				outputFileText.setText(chooser.getSelectedFile()
						.getCanonicalPath());
			} catch (IOException ex) {
				LOG.error(bundle
						.getString("Error_when_returning_from_file_chooser_dialog!"));
				return;
				// FIXME
			}
		}
	}// GEN-LAST:event_browseFileBtnActionPerformed

	@Override
	public String getItem() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JScrollPane getScrollPane() {

		if (representingScrollPane == null) {
			representingScrollPane = new VisualizationJScrollPane(this);
		}

		return representingScrollPane;
	}

	@Override
	public String getLabel() {

		return label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	public String getDefaultCssStylesheet() {
		return defaultCssStylesheet;
	}

	public void setDefaultCssStylesheet(String defaultCssStylesheet) {
		this.defaultCssStylesheet = defaultCssStylesheet;
	}

	public VisualizationItemNode getVisualizationItemNode() {
		return visualizationItemNode;
	}

	public void setVisualizationItemNode(
			VisualizationItemNode visualizationItemNode) {
		this.visualizationItemNode = visualizationItemNode;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton browseFileBtn;
	private javax.swing.JButton browseLocalCssBtn;
	private javax.swing.JPanel cssJPanel;
	private javax.swing.JLabel groupSelectionLabel;
	private javax.swing.JPanel groupSelectionPanel;
	private cz.muni.fi.fresneleditor.common.guisupport.components.UrisJList groupsList;
	private javax.swing.JScrollPane groupsListScrollPane;
	private javax.swing.JLabel outputFileDescLbl;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JPanel outputFileJPanel;
	private javax.swing.JLabel outputFileLbl;
	private javax.swing.JTextField outputFileText;
	private javax.swing.JLabel stylesheetDescLbl;
	private javax.swing.JTextField stylesheetUriText;
	private javax.swing.JLabel sylesheetUriLabel;
	private javax.swing.JButton visualizeBtn;
	// End of variables declaration//GEN-END:variables

}
